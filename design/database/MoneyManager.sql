SET SESSION FOREIGN_KEY_CHECKS=0;

/* Drop Tables */

DROP TABLE IF EXISTS MONEY.CERTIFICATE_ITEM;
DROP TABLE IF EXISTS MONEY.ACCOUNT_CLOSING;
DROP TABLE IF EXISTS MONEY.ACCOUNT;
DROP TABLE IF EXISTS MONEY.DAY_CHECK_MONEY;
DROP TABLE IF EXISTS MONEY.BANK_OPERATION;
DROP TABLE IF EXISTS MONEY.CERTIFICATE;
DROP TABLE IF EXISTS MONEY.ACCOUNT_OPERATION;
DROP TABLE IF EXISTS MONEY.BANK_AND_ACCOUNT;
DROP TABLE IF EXISTS MONEY.USER_AND_BOOK;
DROP TABLE IF EXISTS MONEY.ACCOUNT_BOOK;
DROP TABLE IF EXISTS MONEY.PAY_FAIL;
DROP TABLE IF EXISTS MONEY.POS_POST;
DROP TABLE IF EXISTS MONEY.QUERY_LOG;
DROP TABLE IF EXISTS MONEY.RUN_PARAM;
DROP TABLE IF EXISTS MONEY.USER_ROLE;
DROP TABLE IF EXISTS MONEY.USER;




/* Create Tables */

CREATE TABLE MONEY.ACCOUNT
(
	ID int NOT NULL AUTO_INCREMENT,
	NAME varchar(128) NOT NULL,
	-- DEBIT
	-- CREDIT
	DIRECTION varchar(6) NOT NULL COMMENT 'DEBIT
CREDIT',
	DESCRIPTION varchar(512),
	ACCOUNT_BOOK int NOT NULL,
	CREATE_DATE datetime NOT NULL,
	PARENT int,
	ACCOUNT_CODE varchar(32) NOT NULL,
	PRIMARY KEY (ID),
	CONSTRAINT ACCOUNT_CODE_UNIQUE UNIQUE (ACCOUNT_BOOK, ACCOUNT_CODE)
) ENGINE = InnoDB DEFAULT CHARACTER SET utf8;


CREATE TABLE MONEY.ACCOUNT_BOOK
(
	ID int NOT NULL AUTO_INCREMENT,
	NAME varchar(256) NOT NULL,
	CREATE_DATE datetime NOT NULL,
	DESCRIPTION varchar(512),
	YEAR int NOT NULL,
	BEGIN_DAY int NOT NULL,
	PRIMARY KEY (ID)
) ENGINE = InnoDB DEFAULT CHARACTER SET utf8;


CREATE TABLE MONEY.ACCOUNT_CLOSING
(
	ID int NOT NULL AUTO_INCREMENT,
	ACCOUNT int NOT NULL,
	-- FORWARD
	-- CREATE
	-- MONTH
	-- YEAR
	TYPE varchar(8) NOT NULL COMMENT 'FORWARD
CREATE
MONTH
YEAR',
	BALANCE decimal(19,4) NOT NULL,
	-- 为每个财务周期的起始日期
	CLOSE_DATE datetime NOT NULL COMMENT '为每个财务周期的起始日期',
	START_BALANCE decimal(19,4) NOT NULL,
	DEBIT decimal(19,4) NOT NULL,
	CREDIT decimal(19,4) NOT NULL,
	SUM_DEBIT decimal(19,4) NOT NULL,
	SUM_CREDIT decimal(19,4) NOT NULL,
	OPERATION bigint NOT NULL,
	PRIMARY KEY (ID)
) ENGINE = InnoDB DEFAULT CHARACTER SET utf8;


CREATE TABLE MONEY.ACCOUNT_OPERATION
(
	ID bigint NOT NULL AUTO_INCREMENT,
	_TIME datetime NOT NULL,
	EMP_ID varchar(32) NOT NULL,
	EMP_NAME varchar(64) NOT NULL,
	-- CER_INPUT
	-- CER_CHECK
	-- BANK_CHECK
	-- ACCOUNT_CLOSE
	TYPE varchar(16) NOT NULL COMMENT 'CER_INPUT
CER_CHECK
BANK_CHECK
ACCOUNT_CLOSE',
	BOOK int NOT NULL,
	PRIMARY KEY (ID),
	UNIQUE (_TIME)
) ENGINE = InnoDB DEFAULT CHARACTER SET utf8;


CREATE TABLE MONEY.BANK_AND_ACCOUNT
(
	BANK varchar(32) NOT NULL,
	BANK_ACCOUNT varchar(32) NOT NULL,
	DEBIT_ACCOUNT varchar(32) NOT NULL,
	CREDIT_ACCOUNT varchar(32) NOT NULL,
	BOOK int NOT NULL,
	ACCOUNT_NAME varchar(128) NOT NULL,
	PRIMARY KEY (BANK, BANK_ACCOUNT)
) ENGINE = InnoDB DEFAULT CHARACTER SET utf8;


CREATE TABLE MONEY.BANK_OPERATION
(
	ID bigint NOT NULL AUTO_INCREMENT,
	BANK varchar(32) NOT NULL,
	BANK_NAME varchar(50) NOT NULL,
	ACCOUNT_NUMBER varchar(32) NOT NULL,
	DATA longtext NOT NULL,
	CONTRACT_NUMBER varchar(32) NOT NULL,
	OPERATION_TIME datetime NOT NULL,
	REPORT_TIME datetime NOT NULL,
	MONEY decimal(19,4) NOT NULL,
	-- IN
	-- OUT
	DIRECTION varchar(16) NOT NULL COMMENT 'IN
OUT',
	BANK_SEQ varchar(128) NOT NULL,
	OWNER_CER_NUMBER varchar(128),
	CERTIFICATE bigint NOT NULL,
	PRIMARY KEY (ID),
	CONSTRAINT SEQ_UNIQUE UNIQUE (BANK, BANK_SEQ)
) ENGINE = InnoDB DEFAULT CHARACTER SET utf8;


CREATE TABLE MONEY.CERTIFICATE
(
	ID bigint NOT NULL AUTO_INCREMENT,
	NUMBER bigint NOT NULL,
	_DATE datetime NOT NULL,
	-- CREATE: 记帐
	-- CHECKED: 审核
	-- CLOSE: 结账
	STATUS varchar(6) NOT NULL COMMENT 'CREATE: 记帐
CHECKED: 审核
CLOSE: 结账',
	BOOK int NOT NULL,
	VERSION int NOT NULL,
	_CREATE bigint NOT NULL,
	_CHECK bigint,
	PRIMARY KEY (ID)
) ENGINE = InnoDB DEFAULT CHARACTER SET utf8;


CREATE TABLE MONEY.CERTIFICATE_ITEM
(
	ID bigint NOT NULL AUTO_INCREMENT,
	CERTIFICATE bigint NOT NULL,
	ACCOUNT int NOT NULL,
	DEBIT_MONEY decimal(19,4) NOT NULL,
	CREDIT_MONEY decimal(19,4) NOT NULL,
	DESCRIPTION varchar(512),
	PRIMARY KEY (ID)
) ENGINE = InnoDB DEFAULT CHARACTER SET utf8;


CREATE TABLE MONEY.DAY_CHECK_MONEY
(
	ID bigint NOT NULL AUTO_INCREMENT,
	DAY datetime NOT NULL,
	CHECK_TIME datetime NOT NULL,
	DATA longtext NOT NULL,
	BANK varchar(32) NOT NULL,
	BANK_NAME varchar(50) NOT NULL,
	ACCOUNT_NUMBER varchar(32) NOT NULL,
	SUCCESS boolean NOT NULL,
	BALANCE decimal(19,4) NOT NULL,
	BOOK int NOT NULL,
	OPERATION bigint NOT NULL,
	PRIMARY KEY (ID)
) ENGINE = InnoDB DEFAULT CHARACTER SET utf8;


CREATE TABLE MONEY.PAY_FAIL
(
	ID bigint NOT NULL AUTO_INCREMENT,
	BANK varchar(32) NOT NULL,
	BANK_NAME varchar(50) NOT NULL,
	ACCOUNT_NUMBER varchar(32) NOT NULL,
	DATA longtext NOT NULL,
	CONTRACT_NUMBER varchar(32) NOT NULL,
	OPERATION_TIME datetime NOT NULL,
	REPORT_TIME datetime NOT NULL,
	PRIMARY KEY (ID)
) ENGINE = InnoDB DEFAULT CHARACTER SET utf8;


CREATE TABLE MONEY.POS_POST
(
	SEQ varchar(128) NOT NULL,
	MONEY decimal(19,4) NOT NULL,
	CONTRACT varchar(50) NOT NULL,
	BANK varchar(20) NOT NULL,
	ACCOUNT varchar(128) NOT NULL,
	CARD varchar(128) NOT NULL,
	OPERATION_TIME datetime NOT NULL,
	DATA_TIME timestamp NOT NULL,
	DATA longtext NOT NULL,
	IS_IN boolean NOT NULL,
	PRIMARY KEY (SEQ)
) ENGINE = InnoDB DEFAULT CHARACTER SET utf8;


CREATE TABLE MONEY.QUERY_LOG
(
	ID bigint NOT NULL AUTO_INCREMENT,
	QUERY_TIME datetime NOT NULL,
	DATA longtext NOT NULL,
	BANK varchar(32) NOT NULL,
	ACCOUNT_NUMBER varchar(32) NOT NULL,
	-- OLD_CONTRACT
	-- NEW_CONTRACT
	-- OLD_PAY
	-- NEW_PAY
	OPERATION varchar(16) NOT NULL COMMENT 'OLD_CONTRACT
NEW_CONTRACT
OLD_PAY
NEW_PAY',
	PRIMARY KEY (ID)
) ENGINE = InnoDB DEFAULT CHARACTER SET utf8;


CREATE TABLE MONEY.RUN_PARAM
(
	ID varchar(32) NOT NULL,
	_VALUE varchar(512) NOT NULL,
	DESCRIPTION varchar(128),
	-- STRING
	-- INT
	-- DECIMAL
	TYPE varchar(12) COMMENT 'STRING
INT
DECIMAL',
	PRIMARY KEY (ID)
) ENGINE = InnoDB DEFAULT CHARACTER SET utf8;


CREATE TABLE MONEY.USER
(
	ID varchar(32) NOT NULL,
	NAME varchar(64) NOT NULL,
	PASSWORD varchar(128) NOT NULL,
	PRIMARY KEY (ID)
) ENGINE = InnoDB DEFAULT CHARACTER SET utf8;


CREATE TABLE MONEY.USER_AND_BOOK
(
	USER varchar(32) NOT NULL,
	BOOK int NOT NULL,
	ROLE varchar(32) NOT NULL,
	ID bigint NOT NULL AUTO_INCREMENT,
	PRIMARY KEY (ID),
	CONSTRAINT USER_BOOK_UNIQUE UNIQUE (USER, BOOK)
) ENGINE = InnoDB DEFAULT CHARACTER SET utf8;


CREATE TABLE MONEY.USER_ROLE
(
	ID int NOT NULL AUTO_INCREMENT,
	ROLE varchar(16) NOT NULL,
	USER varchar(32) NOT NULL,
	PRIMARY KEY (ID)
) ENGINE = InnoDB DEFAULT CHARACTER SET utf8;



/* Create Foreign Keys */

ALTER TABLE MONEY.ACCOUNT
	ADD FOREIGN KEY (PARENT)
	REFERENCES MONEY.ACCOUNT (ID)
	ON UPDATE RESTRICT
	ON DELETE RESTRICT
;


ALTER TABLE MONEY.CERTIFICATE_ITEM
	ADD FOREIGN KEY (ACCOUNT)
	REFERENCES MONEY.ACCOUNT (ID)
	ON UPDATE RESTRICT
	ON DELETE RESTRICT
;


ALTER TABLE MONEY.ACCOUNT_CLOSING
	ADD FOREIGN KEY (ACCOUNT)
	REFERENCES MONEY.ACCOUNT (ID)
	ON UPDATE RESTRICT
	ON DELETE RESTRICT
;


ALTER TABLE MONEY.DAY_CHECK_MONEY
	ADD FOREIGN KEY (BOOK)
	REFERENCES MONEY.ACCOUNT_BOOK (ID)
	ON UPDATE RESTRICT
	ON DELETE RESTRICT
;


ALTER TABLE MONEY.CERTIFICATE
	ADD FOREIGN KEY (BOOK)
	REFERENCES MONEY.ACCOUNT_BOOK (ID)
	ON UPDATE RESTRICT
	ON DELETE RESTRICT
;


ALTER TABLE MONEY.ACCOUNT_OPERATION
	ADD FOREIGN KEY (BOOK)
	REFERENCES MONEY.ACCOUNT_BOOK (ID)
	ON UPDATE RESTRICT
	ON DELETE RESTRICT
;


ALTER TABLE MONEY.BANK_AND_ACCOUNT
	ADD FOREIGN KEY (BOOK)
	REFERENCES MONEY.ACCOUNT_BOOK (ID)
	ON UPDATE RESTRICT
	ON DELETE RESTRICT
;


ALTER TABLE MONEY.ACCOUNT
	ADD FOREIGN KEY (ACCOUNT_BOOK)
	REFERENCES MONEY.ACCOUNT_BOOK (ID)
	ON UPDATE RESTRICT
	ON DELETE RESTRICT
;


ALTER TABLE MONEY.USER_AND_BOOK
	ADD FOREIGN KEY (BOOK)
	REFERENCES MONEY.ACCOUNT_BOOK (ID)
	ON UPDATE RESTRICT
	ON DELETE RESTRICT
;


ALTER TABLE MONEY.CERTIFICATE
	ADD FOREIGN KEY (_CHECK)
	REFERENCES MONEY.ACCOUNT_OPERATION (ID)
	ON UPDATE RESTRICT
	ON DELETE RESTRICT
;


ALTER TABLE MONEY.DAY_CHECK_MONEY
	ADD FOREIGN KEY (OPERATION)
	REFERENCES MONEY.ACCOUNT_OPERATION (ID)
	ON UPDATE RESTRICT
	ON DELETE RESTRICT
;


ALTER TABLE MONEY.CERTIFICATE
	ADD FOREIGN KEY (_CREATE)
	REFERENCES MONEY.ACCOUNT_OPERATION (ID)
	ON UPDATE RESTRICT
	ON DELETE RESTRICT
;


ALTER TABLE MONEY.ACCOUNT_CLOSING
	ADD FOREIGN KEY (OPERATION)
	REFERENCES MONEY.ACCOUNT_OPERATION (ID)
	ON UPDATE RESTRICT
	ON DELETE RESTRICT
;


ALTER TABLE MONEY.CERTIFICATE_ITEM
	ADD FOREIGN KEY (CERTIFICATE)
	REFERENCES MONEY.CERTIFICATE (ID)
	ON UPDATE RESTRICT
	ON DELETE RESTRICT
;


ALTER TABLE MONEY.BANK_OPERATION
	ADD FOREIGN KEY (CERTIFICATE)
	REFERENCES MONEY.CERTIFICATE (ID)
	ON UPDATE RESTRICT
	ON DELETE RESTRICT
;


ALTER TABLE MONEY.USER_ROLE
	ADD FOREIGN KEY (USER)
	REFERENCES MONEY.USER (ID)
	ON UPDATE RESTRICT
	ON DELETE RESTRICT
;


ALTER TABLE MONEY.USER_AND_BOOK
	ADD FOREIGN KEY (USER)
	REFERENCES MONEY.USER (ID)
	ON UPDATE RESTRICT
	ON DELETE RESTRICT
;



